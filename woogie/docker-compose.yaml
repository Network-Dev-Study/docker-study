version: '3.1'

services:
  nginx-proxy:
    container_name: nginx-proxy
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/config:/etc/nginx/conf.d
    restart: always

  fe-web:
    build:
      context: ./fe-web
      dockerfile: ./Dockerfile  # React 앱을 빌드할 Dockerfile

  be-for-frontend:
    build:
      context: ./be-for-frontend
      dockerfile: ./Dockerfile
    volumes:
      - ./be-for-frontend:/app

  be-board:
    build:
      context: ./be-board
      dockerfile: ./Dockerfile
    volumes:
      - ./be-board:/app
      - be-board-node_modules:/app/node_modules
    healthcheck:
      test: ["CMD", "node", "src/utils/healthcheck.util.mjs", "-t", "150"]
      interval: 5s
      timeout: 1s
      retries: 5
      start_period: 3s

  be-logger:
    build:
      context: ./be-logger
      dockerfile: ./Dockerfile # Spring Boot 앱의 Dockerfile

  mysql:
    container_name: mysql
    image: mysql:latest
    restart: always
    ports:
      - "33068:3306"
    command:
      [
        "mysqld",
        "--character-set-server=utf8mb4",
        "--collation-server=utf8mb4_bin"
      ]
    volumes:
      - ./mysql/data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d

networks:
  default:
    name: docker-study

volumes:
  be-board-node_modules: